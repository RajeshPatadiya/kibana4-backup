'use strict';

var _ = require('lodash');
var async = require('async');
var fs = require('fs-extra');
var debug = require('debug')('kibana4-backup');

module.exports = kibana4Backup;

/**
* options generated by commander in ./bin/kibana4-backup
*
* repo: REQUIRED - Git repo to store kibana4 data
* elasticsearchUrl: REQUIRED - Elasticsearch HTTP url you want to target
* cloneDirectory: RECOMMENDED - The directory to clone the git repo to. Should be an absolute path, must have write access.
* environment: The environment you want to target.  Alphanumeric only, no whitespace.
* commitMessage: Commit message to use when changes are made.
* index: The name of the elasticsearch index you are using for kibana.
*/

function kibana4Backup(options, cb){
  //Must require here due to config init step
  var config = require('./lib/config')(options);
  var clone = require('./lib/git/clone');
  var getLatest = require('./lib/git/get-latest');
  var createDirectories = require('./lib/create-directories');
  var createReadmes = require('./lib/readmes/create');
  var restore = require('./lib/restore');
  var deploy = require('./lib/deploy');
  var backup = require('./lib/backup');
  var commit = require('./lib/git/commit');
  var push = require('./lib/git/push');

  debug('Starting kibana4 backup');
  async.series([
    _.partial(fs.mkdirs, config.cloneDir),
    clone,
    getLatest,
    createDirectories,
    createReadmes,
    restore,
    deploy,
    backup,
    commit,
    push
  ], function(err, results){
    if(err) {
      console.error('kibana4-backup failed');
      console.error(err);
      return cb(err);
    }
    debug(results);
    console.log('kibana4-backup complete');
    cb();
  });
}